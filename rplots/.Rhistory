# Load necessary library
library(ggplot2)
# Define the Bohr radius in angstroms (approximately 0.529 Å)
bohr_radius <- 0.529
# Create a data frame for the electron's orbit (circle)
theta <- seq(0, 2 * pi, length.out = 100)
orbit <- data.frame(
x = bohr_radius * cos(theta),
y = bohr_radius * sin(theta)
)
# Create the plot
ggplot() +
# Plot the electron's orbit
geom_path(data = orbit, aes(x = x, y = y), color = "blue", size = 1) +
# Plot the nucleus
geom_point(aes(x = 0, y = 0), color = "red", size = 4) +
# Annotate the nucleus
annotate("text", x = 0, y = 0.1, label = "Nucleus", color = "red", size = 5, hjust = 0.5) +
# Annotate the electron
annotate("text", x = bohr_radius, y = 0.1, label = "Electron", color = "blue", size = 5, hjust = 0) +
# Set equal scaling and labels
coord_equal() +
labs(
title = "Bohr Model of the Hydrogen Atom",
x = "x (Å)",
y = "y (Å)"
) +
# Theme adjustments
theme_minimal() +
theme(
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5)
)
# Load the ggplot2 package
library(ggplot2)
# Create a sequence of x values
x <- seq(0, 2 * pi, length.out = 100)
# Compute the sine of each x value
y <- sin(x)
# Create a data frame with the x and y values
data <- data.frame(x = x, y = y)
# Plot the sine wave using ggplot2
ggplot(data, aes(x = x, y = y)) +
geom_line(color = "blue") +
labs(title = "Sine Wave", x = "x", y = "sin(x)") +
theme_minimal()
# y = Asin(kx-⍵t+ϕ)
# y = sin(((2π)/1)*x)
A <- 1 # nolint
lambda <- 1
k <- 2 * pi / lambda
k2 <- 2 * pi / 2 * lambda
k3 <- 2 * k
omega <- 0
t <- 0
phi <- 0
fa <- function(x) k * x - omega * t + phi
f1b <- function(x) 2 * k * x - omega * t + phi
f <- function(x) A * sin(k * x - omega * t + phi)
f1 <- function(x) A * sin(2 * k * x - omega * t + phi)
f2 <- function(x) 2 * sin((fa(x) + f1b(x)) / 2) * cos((fa(x) - f1b(x)) / 2)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
curve(f1, 0, 1, col = "#30f", lwd = 4, n = 1000, add = TRUE)
curve(f2, 0, 1, col = "#f90", lwd = 4, n = 1000, add = TRUE)
# y = Asin(kx-⍵t+ϕ)
# y = sin(((2π)/1)*x)
A <- 1 # nolint
lambda <- 1
k <- 2 * pi / lambda
# k2 <- 2 * pi / 2 * lambda
# k3 <- 2 * k
omega <- 0
t <- 0
phi <- 0
fa <- function(x) k * x - omega * t + phi
f1b <- function(x) 2 * k * x - omega * t + phi
f <- function(x) A * sin(k * x - omega * t + phi)
# f1 <- function(x) A * sin(2 * k * x - omega * t + phi)
# f2 <- function(x) 2 * sin((fa(x) + f1b(x)) / 2) * cos((fa(x) - f1b(x)) / 2)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
curve(f1, 0, 1, col = "#30f", lwd = 4, n = 1000, add = TRUE)
curve(f2, 0, 1, col = "#f90", lwd = 4, n = 1000, add = TRUE)
# y = Asin(kx-⍵t+ϕ)
# y = sin(((2π)/1)*x)
A <- 1 # nolint
lambda <- 1
k <- 2 * pi / lambda
# k2 <- 2 * pi / 2 * lambda
# k3 <- 2 * k
omega <- 0
t <- 0
phi <- 0
fa <- function(x) k * x - omega * t + phi
f1b <- function(x) 2 * k * x - omega * t + phi
f <- function(x) A * sin(k * x - omega * t + phi)
# f1 <- function(x) A * sin(2 * k * x - omega * t + phi)
# f2 <- function(x) 2 * sin((fa(x) + f1b(x)) / 2) * cos((fa(x) - f1b(x)) / 2)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
curve(f1, 0, 1, col = "#30f", lwd = 4, n = 1000, add = TRUE)
curve(f2, 0, 1, col = "#f90", lwd = 4, n = 1000, add = TRUE)
# y = Asin(kx-⍵t+ϕ)
# y = sin(((2π)/1)*x)
A <- 1 # nolint
lambda <- 1
k <- 2 * pi / lambda
# k2 <- 2 * pi / 2 * lambda
# k3 <- 2 * k
omega <- 0
t <- 0
phi <- 0
fa <- function(x) k * x - omega * t + phi
f1b <- function(x) 2 * k * x - omega * t + phi
f <- function(x) A * sin(k * x - omega * t + phi)
# f1 <- function(x) A * sin(2 * k * x - omega * t + phi)
# f2 <- function(x) 2 * sin((fa(x) + f1b(x)) / 2) * cos((fa(x) - f1b(x)) / 2)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
# curve(f1, 0, 1, col = "#30f", lwd = 4, n = 1000, add = TRUE)
# curve(f2, 0, 1, col = "#f90", lwd = 4, n = 1000, add = TRUE)
A <- 1 # nolint
w <- 1
k <- 2 * pi / w
f <- 1
omega <- 2 * pi * f
t <- 0
phi <- 0
f <- function(x) A * sin(k * x - omega * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 1
f <- 2
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 0
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
dev.off();
A <- 1
f <- 2
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 0
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 1
f <- 3
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 0
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
dev.off();
A <- 1
f <- 3
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 0
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 1
f <- 3
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
dev.off();
A <- 1
f <- 3
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 3
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 1
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 1
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
frequency <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * frequency
t <- 1
phi <- 0
sine_function <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine_function, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
f <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(f, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
f <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * f
t <- 1
phi <- 0
sine <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
fr <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * fr
t <- 1
phi <- 0
sine <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
fr <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * fr
t <- 1
phi <- 0
sine <- function(x) A * sin(k * x - fr + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
fr <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * fr
t <- 1
phi <- 0
sine <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
fr <- 10
w <- 1
k <- 2 * pi / w
o <- fr
t <- 1
phi <- 0
sine <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
A <- 2
fr <- 10
w <- 1
k <- 2 * pi / w
o <- 2 * pi * fr
t <- 1
phi <- 0
sine <- function(x) A * sin(k * x - o * t + phi)
plot(0,
type = "n", ylim = c(-2, 2), xlim = c(0, 1), bty = "n",
xlab = "x", ylab = "y", main = "Sine Function"
)
grid()
curve(sine, 0, 1, col = "#09f", lwd = 4, n = 1000, add = TRUE)
